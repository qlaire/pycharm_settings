<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="/a.dummy" timestamp="1565627404719">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/returns/order_returns/data/returnable_subscription_item.py" timestamp="1565625666639">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="57" column="43" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/returns/order_returns/data/returnable_item_builder.py" timestamp="1564682922281">
        <mark key="[" line="7" column="22" />
        <mark key="]" line="7" column="28" />
        <mark key="." line="7" column="28" />
        <mark key="^" line="7" column="28" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/cms/app/server/controllers/test_warehouse.py" timestamp="1564421790435">
        <mark key="'" line="624" column="12" />
        <mark key="[" line="681" column="9" />
        <mark key="]" line="682" column="7" />
        <mark key="." line="682" column="7" />
        <mark key="^" line="682" column="7" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/returns/order_returns/data/returnable_order_repository.py" timestamp="1565797499157">
        <mark key="[" line="23" column="0" />
        <mark key="]" line="23" column="0" />
        <mark key="." line="23" column="0" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/app/server/controllers/__init__.py" timestamp="1555360759582">
        <mark key="'" line="25" column="39" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/returns/order_returns/domain/returnable_order.py" timestamp="1565794968046">
        <mark key="'" line="9" column="12" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/app/partners/shipping/ux_ship.py" timestamp="1560795347566">
        <mark key="'" line="552" column="36" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/shipping/logistics/domain/delivery_time_slot.py" timestamp="1563311075970">
        <mark key="'" line="35" column="16" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/data/models/test_order.py" timestamp="1563393823515">
        <mark key="'" line="56" column="26" />
        <mark key="[" line="747" column="32" />
        <mark key="]" line="748" column="7" />
        <mark key="^" line="748" column="7" />
        <mark key="." line="748" column="7" />
      </file>
      <file name="$USER_HOME$/Development/api/data/models/peloton_postgres.py" timestamp="1564161269480">
        <mark key="'" line="230" column="32" />
      </file>
      <file name="$USER_HOME$/Development/blackboard/blackboard-slate-api-py/bb_slate_api/repositories/losses_mapper.py" timestamp="1548269615784">
        <mark key="'" line="27" column="8" />
      </file>
      <file name="$USER_HOME$/Development/api/rest_api/app/server/utils.py" timestamp="1554390568796">
        <mark key="'" line="386" column="18" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/ecomm/app/server/controllers/test_order.py" timestamp="1555966356258">
        <mark key="'" line="675" column="24" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/ecomm/shipping/logistics/data/test_postal_code_warehouse_builder.py" timestamp="1555537271437">
        <mark key="'" line="53" column="25" />
      </file>
      <file name="$USER_HOME$/Development/api/cms/app/utils/warehouse_postal_code_parser.py" timestamp="1563914417092">
        <mark key="'" line="305" column="8" />
      </file>
      <file name="$USER_HOME$/Development/api/cms/app/server/controllers/fulfillment_configurations/device_subscription.py" timestamp="1565622881174">
        <mark key="'" line="60" column="8" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/ecomm/returns/order_returns/domain/test_order_item.py" timestamp="1564691826387">
        <mark key="[" line="17" column="89" />
        <mark key="]" line="17" column="90" />
        <mark key="." line="17" column="90" />
        <mark key="^" line="17" column="92" />
      </file>
      <file name="$USER_HOME$/Development/api/cms/components/ecomm/warehouse/warehouse_index.py" timestamp="1564413461379">
        <mark key="'" line="48" column="46" />
        <mark key="[" line="48" column="57" />
        <mark key="]" line="48" column="62" />
        <mark key="." line="48" column="62" />
        <mark key="^" line="48" column="62" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/app/billing/subscription_charge.py" timestamp="1554153690088">
        <mark key="'" line="62" column="16" />
      </file>
      <file name="$USER_HOME$/Library/Caches/PyCharm2019.1/remote_sources/-1820590504/-497732817/cms/app/server/controllers/rma.py" timestamp="1565276849417">
        <mark key="'" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/zendesk/commands/return_order.py" timestamp="1564516419404">
        <mark key="'" line="19" column="11" />
      </file>
      <file name="$USER_HOME$/Development/api/data/models/warehouse.py" timestamp="1558723296896">
        <mark key="'" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/returns/rmas/commands/return_items.py" timestamp="1564675480607">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="1" column="16" />
        <mark key="^" line="1" column="16" />
        <mark key="." line="1" column="16" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/ecomm/returns/order_returns/commands/test_process_return.py" timestamp="1565298425063">
        <mark key="'" line="16" column="0" />
        <mark key="[" line="19" column="0" />
        <mark key="]" line="22" column="55" />
        <mark key="." line="10" column="0" />
        <mark key="^" line="45" column="68" />
      </file>
      <file name="/order_details.py" timestamp="1565300574974">
        <mark key="'" line="3" column="38" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/ecomm/returns/order_returns/data/test_returnable_subscription_builder.py" timestamp="1565798427143">
        <mark key="[" line="45" column="59" />
        <mark key="]" line="45" column="59" />
        <mark key="^" line="45" column="59" />
        <mark key="." line="45" column="59" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/cms/app/utils/test_warehouse_zipcode_parser.py" timestamp="1555360008161">
        <mark key="'" line="382" column="12" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/ecomm/app/server/controllers/zendesk/responses/test_order_details.py" timestamp="1565367526295">
        <mark key="'" line="9" column="21" />
        <mark key="[" line="16" column="51" />
        <mark key="]" line="16" column="51" />
        <mark key="^" line="15" column="62" />
        <mark key="." line="16" column="51" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/returns/order_returns/data/returnable_order_builder.py" timestamp="1565795783219">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="21" column="24" />
        <mark key="]" line="21" column="31" />
        <mark key="^" line="21" column="31" />
        <mark key="." line="21" column="31" />
      </file>
      <file name="$USER_HOME$/Development/blackboard/blackboard-slate-api-py/bb_slate_api/repositories/iqos_transaction_accessor.py" timestamp="1548190689249">
        <mark key="'" line="10" column="6" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/ecomm/returns/order_returns/domain/test_returnable_order.py" timestamp="1565794902081">
        <mark key="]" line="51" column="9" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/returns/order_returns/domain/returnable_item.py" timestamp="1564678019559">
        <mark key="[" line="8" column="27" />
        <mark key="]" line="9" column="24" />
        <mark key="." line="9" column="24" />
        <mark key="^" line="9" column="24" />
      </file>
      <file name="$USER_HOME$/Development/api/data/models/subscription.py" timestamp="1565798148967">
        <mark key="'" line="739" column="8" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="2172" column="68" />
        <mark key="." line="2172" column="68" />
        <mark key="^" line="2172" column="68" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/ecomm/shipping/logistics/commands/test_get_available_delivery_dates_for_postal_code.py" timestamp="1555968253807">
        <mark key="'" line="65" column="36" />
      </file>
      <file name="$USER_HOME$/Development/blackboard/blackboard-slate-api-py/bb_slate_api/queries/query_handler.py" timestamp="1544114583308">
        <mark key="'" line="10" column="0" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/subscriptions/data/subscription_factory.py" timestamp="1554834511131">
        <mark key="'" line="8" column="8" />
      </file>
      <file name="$USER_HOME$/Development/api/cms/templates/rider/subscriptions/confirm_pause.html" timestamp="1555099343573">
        <mark key="'" line="51" column="66" />
      </file>
      <file name="$USER_HOME$/Development/blackboard/blackboard-slate-api-py/bb_slate_api/appservices/save_and_rerate_service.py" timestamp="1544644033125">
        <mark key="'" line="12" column="16" />
      </file>
      <file name="$USER_HOME$/Development/api/data/default/installers/models.py" timestamp="1560525525831">
        <mark key="'" line="23" column="28" />
      </file>
      <file name="$USER_HOME$/Development/api/data/models/product.py" timestamp="1560266948092">
        <mark key="'" line="190" column="34" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/app/orders/order_service.py" timestamp="1565286510580">
        <mark key="'" line="70" column="1" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/subscriptions/data/subscription_repository.py" timestamp="1565623257134">
        <mark key="'" line="13" column="6" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/app/server/controllers/zendesk/responses/order_details.py" timestamp="1565378305945">
        <mark key="[" line="3" column="0" />
        <mark key="]" line="3" column="0" />
        <mark key="." line="3" column="0" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/mq/app/handlers/email/prepare_for_delivery/test_prepare_for_delivery_emails.py" timestamp="1563399557541">
        <mark key="'" line="250" column="47" />
      </file>
      <file name="$USER_HOME$/Development/api/cms/components/shared/deprecated_layout.py" timestamp="1564068013034">
        <mark key="'" line="92" column="14" />
      </file>
      <file name="$USER_HOME$/Development/api/scripts/cron/send_due_subscriptions_to_charge_queue.py" timestamp="1554305314698">
        <mark key="'" line="11" column="30" />
      </file>
      <file name="$USER_HOME$/Development/api/data/models/rma.py" timestamp="1565032989921">
        <mark key="'" line="40" column="18" />
      </file>
      <file name="$USER_HOME$/Development/api/lib/unittest.py" timestamp="1555530592536">
        <mark key="'" line="395" column="20" />
      </file>
      <file name="$USER_HOME$/Development/blackboard/blackboard-slate-api-py/bb_slate_api/appservices/transaction_context_manager.py" timestamp="1547666883375">
        <mark key="'" line="39" column="16" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/ecomm/app/server/controllers/zendesk/test_return_order.py" timestamp="1565300063144">
        <mark key="'" line="154" column="49" />
        <mark key="[" line="154" column="49" />
        <mark key="]" line="154" column="68" />
        <mark key="^" line="154" column="68" />
        <mark key="." line="154" column="68" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/docs/ecomm_api.yaml" timestamp="1553868137905">
        <mark key="'" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Development/api/data/models/parent_payment.py" timestamp="1565798336664">
        <mark key="[" line="21" column="25" />
        <mark key="]" line="22" column="31" />
        <mark key="^" line="22" column="31" />
        <mark key="." line="22" column="31" />
      </file>
      <file name="$USER_HOME$/Development/api/docs/open_api/peloton-api.yaml" timestamp="1554143327791">
        <mark key="'" line="1781" column="26" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/returns/order_returns/data/returnable_subscription_builder.py" timestamp="1565797526797">
        <mark key="[" line="11" column="36" />
        <mark key="]" line="12" column="28" />
        <mark key="^" line="12" column="28" />
        <mark key="." line="12" column="28" />
      </file>
      <file name="$USER_HOME$/Development/api/lib/orm/base/models.py" timestamp="1555360642379">
        <mark key="'" line="304" column="6" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/data/test_subscription.py" timestamp="1555684114263">
        <mark key="'" line="29" column="0" />
      </file>
      <file name="$USER_HOME$/Development/api/cms/templates/ecomm/orders/profile.html" timestamp="1565286515389">
        <mark key="'" line="97" column="75" />
      </file>
      <file name="/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/unittest/case.py" timestamp="1555943043207">
        <mark key="'" line="239" column="8" />
      </file>
      <file name="$USER_HOME$/Development/api/data/services/worker_service.py" timestamp="1564078234406">
        <mark key="'" line="105" column="24" />
      </file>
      <file name="$USER_HOME$/.virtualenvs/blackboard-slate-api-py-hpJx4-Qj/lib/python3.6/site-packages/dateutil/relativedelta.py" timestamp="1548274002704">
        <mark key="'" line="95" column="8" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/ecomm/subscriptions/commands/test_pause_subscription.py" timestamp="1559164802922">
        <mark key="'" line="15" column="23" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/app/shipping/quotes/us.py" timestamp="1556042514093">
        <mark key="'" line="208" column="0" />
      </file>
      <file name="$USER_HOME$/Development/api/mq/app/workers/ecomm/ecommerce.py" timestamp="1554153232310">
        <mark key="'" line="355" column="4" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/returns/order_returns/data/returnable_subscription_item_builder.py" timestamp="1565627623712">
        <mark key="[" line="23" column="26" />
        <mark key="]" line="24" column="57" />
        <mark key="^" line="24" column="57" />
        <mark key="." line="24" column="57" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/app/shipping/quotes/uk.py" timestamp="1555957461996">
        <mark key="'" line="41" column="53" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/please/make.py" timestamp="1565797903950">
        <mark key="'" line="441" column="17" />
      </file>
      <file name="$USER_HOME$/Development/api/data/models/postalcode.py" timestamp="1556032690200">
        <mark key="'" line="114" column="27" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/ecomm/returns/order_returns/commands/test_get_returnable_order.py" timestamp="1565361874605">
        <mark key="'" line="11" column="0" />
      </file>
      <file name="$USER_HOME$/Development/api/errors/ecomm.py" timestamp="1554390553010">
        <mark key="'" line="574" column="25" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/returns/order_returns/commands/process_return.py" timestamp="1565363162352">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="4" column="0" />
        <mark key="]" line="4" column="0" />
        <mark key="^" line="43" column="33" />
        <mark key="." line="4" column="0" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/cms/components/ecomm/warehouse/test_warehouse_index.py" timestamp="1564077000300">
        <mark key="'" line="47" column="32" />
        <mark key="[" line="11" column="18" />
        <mark key="]" line="12" column="0" />
        <mark key="^" line="12" column="0" />
        <mark key="." line="12" column="0" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/mq/app/handlers/email/test_subscription_scheduled_for_cancellation.py" timestamp="1555423394092">
        <mark key="'" line="72" column="8" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/ecomm/app/server/controllers/zendesk/responses/test_return_order.py" timestamp="1565120135037">
        <mark key="[" line="2" column="50" />
        <mark key="]" line="2" column="51" />
        <mark key="." line="2" column="51" />
      </file>
      <file name="$USER_HOME$/Development/api/cms/templates/rider/subscriptions/profile.html" timestamp="1565622759067">
        <mark key="'" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Library/Caches/PyCharm2019.1/remote_sources/-1820590504/-497732817/data/models/user.py" timestamp="1560526092521">
        <mark key="'" line="1784" column="28" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/ecomm/returns/order_returns/data/test_returnable_subscription_item_builder.py" timestamp="1565628661122">
        <mark key="[" line="19" column="0" />
        <mark key="]" line="19" column="0" />
        <mark key="." line="19" column="0" />
      </file>
      <file name="$USER_HOME$/Development/api/data/models/orderitem.py" timestamp="1565021197823">
        <mark key="'" line="313" column="0" />
      </file>
      <file name="$USER_HOME$/Development/api/mq/app/handlers/ecomm/ecommerce.py" timestamp="1554153159541">
        <mark key="'" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Development/blackboard/blackboard-slate-api-py/bb_slate_api/repositories/lob_mapper.py" timestamp="1548190641751">
        <mark key="'" line="68" column="8" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/app/rma/rma_service.py" timestamp="1565623154834">
        <mark key="'" line="131" column="26" />
        <mark key="[" line="120" column="60" />
        <mark key="]" line="46" column="17" />
        <mark key="^" line="46" column="17" />
        <mark key="." line="46" column="17" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/subscriptions/domain/base_subscription.py" timestamp="1554834248887">
        <mark key="'" line="18" column="12" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/scripts/scourgify/workers/refund_sub_charges/test_with_already_refunded_subscription.py" timestamp="1564077940731">
        <mark key="'" line="5" column="23" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/ecomm/returns/order_returns/data/test_returnable_order_builder.py" timestamp="1565796780630">
        <mark key="[" line="138" column="0" />
        <mark key="]" line="144" column="9" />
      </file>
      <file name="$USER_HOME$/Development/api/data/services/shipping.py" timestamp="1557331283667">
        <mark key="'" line="72" column="0" />
      </file>
      <file name="$USER_HOME$/Library/Caches/PyCharm2019.1/remote_sources/642138530/-1227933812/webtest/utils.py" timestamp="1554391637412">
        <mark key="'" line="36" column="20" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/returns/order_returns/commands/get_returnable_order.py" timestamp="1565361301482">
        <mark key="[" line="9" column="0" />
        <mark key="]" line="9" column="0" />
        <mark key="." line="9" column="0" />
        <mark key="^" line="8" column="79" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/app/shipping/quotes/ca.py" timestamp="1555360504952">
        <mark key="'" line="192" column="60" />
      </file>
      <file name="$USER_HOME$/Development/api/cms/app/server/controllers/rma.py" timestamp="1565623196020">
        <mark key="'" line="87" column="8" />
      </file>
      <file name="$USER_HOME$/Development/api/cms/app/server/controllers/shipment.py" timestamp="1564427445657">
        <mark key="'" line="42" column="0" />
        <mark key="[" line="196" column="56" />
        <mark key="]" line="196" column="70" />
        <mark key="." line="196" column="70" />
        <mark key="^" line="196" column="70" />
      </file>
      <file name="$USER_HOME$/Development/api/mq/app/handlers/email/__init__.py" timestamp="1563994541231">
        <mark key="'" line="146" column="24" />
        <mark key="[" line="193" column="30" />
        <mark key="]" line="193" column="57" />
        <mark key="." line="193" column="57" />
        <mark key="^" line="193" column="57" />
      </file>
      <file name="$USER_HOME$/Development/api/data/models/shipment.py" timestamp="1565113614221">
        <mark key="'" line="108" column="26" />
        <mark key="[" line="434" column="0" />
        <mark key="]" line="435" column="69" />
        <mark key="^" line="436" column="89" />
        <mark key="." line="436" column="89" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/app/server/controllers/order/logistics.py" timestamp="1563311234353">
        <mark key="'" line="42" column="43" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/features/lib/steps.py" timestamp="1556031019930">
        <mark key="'" line="405" column="18" />
      </file>
      <file name="$USER_HOME$/Development/api/cms/app/server/controllers/order.py" timestamp="1564421186353">
        <mark key="'" line="20" column="32" />
      </file>
      <file name="$USER_HOME$/Library/Caches/PyCharm2019.1/remote_sources/642138530/-497732817/data/models/warehouse.py" timestamp="1556218333037">
        <mark key="'" line="19" column="37" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/shipping/logistics/commands/get_available_delivery_dates_for_postal_code.py" timestamp="1556031416282">
        <mark key="'" line="32" column="4" />
      </file>
      <file name="$USER_HOME$/Library/Caches/PyCharm2019.1/remote_sources/-1820590504/-497732817/tests/ecomm/app/server/controllers/zendesk/test_return_order.py" timestamp="1565287504576">
        <mark key="'" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/ecomm/app/server/controllers/buy/test_shipping_price_override.py" timestamp="1563305434228">
        <mark key="'" line="145" column="29" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/mq/app/handlers/email/test_schedule_shipment.py" timestamp="1563399716924">
        <mark key="'" line="163" column="13" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/returns/order_returns/domain/returnable_subscription_item.py" timestamp="1565627590176">
        <mark key="'" line="7" column="20" />
        <mark key="[" line="5" column="78" />
        <mark key="]" line="5" column="82" />
        <mark key="." line="5" column="82" />
        <mark key="^" line="5" column="82" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/returns/order_returns/data/order_item_builder.py" timestamp="1565625663350">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="59" column="43" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/data/models/test_shipment.py" timestamp="1563399259300">
        <mark key="'" line="711" column="34" />
        <mark key="[" line="699" column="36" />
        <mark key="]" line="699" column="62" />
        <mark key="^" line="699" column="62" />
        <mark key="." line="699" column="62" />
      </file>
      <file name="$USER_HOME$/Library/Caches/PyCharm2019.1/remote_sources/642138530/-1227933812/webtest/app.py" timestamp="1554391712404">
        <mark key="'" line="734" column="31" />
      </file>
      <file name="$USER_HOME$/Development/api/data/models/return_item.py" timestamp="1565033745301">
        <mark key="'" line="46" column="31" />
      </file>
      <file name="$USER_HOME$/Development/api/cms/app/server/controllers/riders.py" timestamp="1565623122858">
        <mark key="'" line="905" column="14" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/ecomm/app/graphql/test_order.py" timestamp="1563397311592">
        <mark key="'" line="85" column="13" />
        <mark key="[" line="377" column="30" />
        <mark key="]" line="377" column="33" />
        <mark key="." line="377" column="33" />
        <mark key="^" line="377" column="33" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/ecomm/zendesk/commands/test_return_order.py" timestamp="1564501926468">
        <mark key="[" line="33" column="53" />
        <mark key="]" line="34" column="47" />
        <mark key="." line="34" column="47" />
        <mark key="^" line="34" column="47" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/subscriptions/domain/peloton_digital_subscription.py" timestamp="1554153510916">
        <mark key="'" line="121" column="12" />
      </file>
      <file name="$USER_HOME$/Development/api/ecomm/returns/order_returns/domain/order_item.py" timestamp="1565624352173">
        <mark key="'" line="6" column="0" />
        <mark key="[" line="6" column="17" />
        <mark key="]" line="7" column="12" />
        <mark key="." line="7" column="12" />
        <mark key="^" line="7" column="12" />
      </file>
      <file name="$USER_HOME$/Development/blackboard/blackboard-slate-api-py/tests/backend/accounts/conftest.py" timestamp="1544117439238">
        <mark key="'" line="73" column="4" />
      </file>
      <file name="$USER_HOME$/Development/api/tests/integration/ecomm/test_order_response.py" timestamp="1555968521579">
        <mark key="'" line="1326" column="14" />
      </file>
      <file name="$USER_HOME$/Development/api/cms/app/server/controllers/warehouse.py" timestamp="1564421619728">
        <mark key="'" line="102" column="61" />
        <mark key="[" line="107" column="0" />
        <mark key="]" line="107" column="0" />
        <mark key="^" line="106" column="3" />
        <mark key="." line="107" column="0" />
      </file>
      <file name="$USER_HOME$/Development/api/lib/orm/postgres/managers.py" timestamp="1561127055830">
        <mark key="'" line="32" column="4" />
      </file>
    </filemarks>
    <jumps>
      <jump line="72" column="8" filename="$USER_HOME$/Development/api/tests/ecomm/returns/order_returns/domain/test_returnable_order.py" />
      <jump line="75" column="8" filename="$USER_HOME$/Development/api/tests/ecomm/returns/order_returns/domain/test_returnable_order.py" />
      <jump line="78" column="8" filename="$USER_HOME$/Development/api/tests/ecomm/returns/order_returns/domain/test_returnable_order.py" />
      <jump line="145" column="8" filename="$USER_HOME$/Development/api/tests/ecomm/returns/order_returns/domain/test_returnable_order.py" />
      <jump line="148" column="8" filename="$USER_HOME$/Development/api/tests/ecomm/returns/order_returns/domain/test_returnable_order.py" />
      <jump line="1401" column="54" filename="$USER_HOME$/Development/api/data/models/order.py" />
      <jump line="24" column="0" filename="$USER_HOME$/Development/api/data/models/order.py" />
      <jump line="0" column="0" filename="$USER_HOME$/Library/Caches/PyCharm2019.1/remote_sources/-1820590504/-497732817/tests/ecomm/app/server/controllers/zendesk/test_return_order.py" />
      <jump line="59" column="12" filename="$USER_HOME$/Development/api/tests/ecomm/returns/order_returns/commands/test_process_return.py" />
      <jump line="61" column="0" filename="$USER_HOME$/Development/api/tests/ecomm/returns/order_returns/commands/test_process_return.py" />
      <jump line="17" column="0" filename="$USER_HOME$/Development/api/tests/ecomm/returns/order_returns/commands/test_process_return.py" />
      <jump line="0" column="0" filename="$USER_HOME$/Development/api/tests/ecomm/app/server/controllers/zendesk/test_return_order.py" />
      <jump line="154" column="49" filename="$USER_HOME$/Development/api/tests/ecomm/app/server/controllers/zendesk/test_return_order.py" />
      <jump line="6" column="89" filename="$USER_HOME$/Development/api/tests/ecomm/returns/order_returns/commands/test_get_returnable_order.py" />
      <jump line="3" column="38" filename="/order_details.py" />
      <jump line="11" column="0" filename="$USER_HOME$/Development/api/tests/ecomm/returns/order_returns/commands/test_get_returnable_order.py" />
      <jump line="246" column="25" filename="$USER_HOME$/Development/api/ecomm/app/rma/rma_service.py" />
      <jump line="21" column="30" filename="$USER_HOME$/Development/api/ecomm/app/rma/rma_service.py" />
      <jump line="22" column="4" filename="$USER_HOME$/Development/api/ecomm/app/rma/rma_service.py" />
      <jump line="23" column="4" filename="$USER_HOME$/Development/api/ecomm/app/rma/rma_service.py" />
      <jump line="0" column="0" filename="$USER_HOME$/Development/api/cms/templates/rider/subscriptions/profile.html" />
      <jump line="0" column="0" filename="$USER_HOME$/Development/api/cms/app/server/controllers/fulfillment_configurations/device_subscription.py" />
      <jump line="58" column="70" filename="$USER_HOME$/Development/api/cms/app/server/controllers/fulfillment_configurations/device_subscription.py" />
      <jump line="60" column="8" filename="$USER_HOME$/Development/api/cms/app/server/controllers/fulfillment_configurations/device_subscription.py" />
      <jump line="1191" column="17" filename="$USER_HOME$/Development/api/cms/app/server/controllers/riders.py" />
      <jump line="1216" column="32" filename="$USER_HOME$/Development/api/cms/app/server/controllers/riders.py" />
      <jump line="1253" column="32" filename="$USER_HOME$/Development/api/cms/app/server/controllers/riders.py" />
      <jump line="1329" column="32" filename="$USER_HOME$/Development/api/cms/app/server/controllers/riders.py" />
      <jump line="1560" column="4" filename="$USER_HOME$/Development/api/cms/app/server/controllers/riders.py" />
      <jump line="1761" column="4" filename="$USER_HOME$/Development/api/cms/app/server/controllers/riders.py" />
      <jump line="334" column="4" filename="$USER_HOME$/Development/api/cms/app/server/controllers/riders.py" />
      <jump line="453" column="4" filename="$USER_HOME$/Development/api/cms/app/server/controllers/riders.py" />
      <jump line="562" column="4" filename="$USER_HOME$/Development/api/cms/app/server/controllers/riders.py" />
      <jump line="725" column="4" filename="$USER_HOME$/Development/api/cms/app/server/controllers/riders.py" />
      <jump line="905" column="14" filename="$USER_HOME$/Development/api/cms/app/server/controllers/riders.py" />
      <jump line="131" column="26" filename="$USER_HOME$/Development/api/ecomm/app/rma/rma_service.py" />
      <jump line="42" column="12" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="43" column="12" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="301" column="16" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="302" column="16" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="359" column="38" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="360" column="43" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="382" column="61" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="581" column="65" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="585" column="27" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="586" column="40" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="591" column="37" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="628" column="28" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="409" column="43" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="445" column="32" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="446" column="50" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="463" column="36" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="607" column="15" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="4" column="20" filename="$USER_HOME$/Development/api/ecomm/returns/order_returns/domain/returnable_subscription_item.py" />
      <jump line="45" column="21" filename="$USER_HOME$/Development/api/ecomm/returns/order_returns/data/order_item_builder.py" />
      <jump line="0" column="0" filename="$USER_HOME$/Development/api/ecomm/returns/order_returns/data/order_item_builder.py" />
      <jump line="24" column="8" filename="$USER_HOME$/Development/api/tests/ecomm/returns/order_returns/data/test_returnable_subscription_item_builder.py" />
      <jump line="1349" column="4" filename="$USER_HOME$/Development/api/tests/please/make.py" />
      <jump line="1507" column="17" filename="$USER_HOME$/Development/api/tests/please/make.py" />
      <jump line="1579" column="20" filename="$USER_HOME$/Development/api/tests/please/make.py" />
      <jump line="1587" column="20" filename="$USER_HOME$/Development/api/tests/please/make.py" />
      <jump line="1595" column="17" filename="$USER_HOME$/Development/api/tests/please/make.py" />
      <jump line="1602" column="20" filename="$USER_HOME$/Development/api/tests/please/make.py" />
      <jump line="1612" column="24" filename="$USER_HOME$/Development/api/tests/please/make.py" />
      <jump line="1624" column="42" filename="$USER_HOME$/Development/api/tests/please/make.py" />
      <jump line="1636" column="48" filename="$USER_HOME$/Development/api/tests/please/make.py" />
      <jump line="609" column="41" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="831" column="8" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="833" column="21" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="835" column="22" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="968" column="24" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="918" column="12" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="597" column="16" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="468" column="12" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="387" column="52" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="264" column="4" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="269" column="13" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="270" column="8" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="271" column="9" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="272" column="14" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="287" column="25" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="845" column="44" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="18" column="4" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="279" column="8" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="736" column="8" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="855" column="12" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="0" column="0" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="2172" column="68" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="16" column="41" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
      <jump line="1648" column="30" filename="$USER_HOME$/Development/api/tests/please/make.py" />
      <jump line="2158" column="16" filename="$USER_HOME$/Development/api/tests/please/make.py" />
      <jump line="2236" column="31" filename="$USER_HOME$/Development/api/tests/please/make.py" />
      <jump line="2238" column="17" filename="$USER_HOME$/Development/api/tests/please/make.py" />
      <jump line="2241" column="16" filename="$USER_HOME$/Development/api/tests/please/make.py" />
      <jump line="426" column="31" filename="$USER_HOME$/Development/api/tests/please/make.py" />
      <jump line="430" column="17" filename="$USER_HOME$/Development/api/tests/please/make.py" />
      <jump line="432" column="17" filename="$USER_HOME$/Development/api/tests/please/make.py" />
      <jump line="440" column="45" filename="$USER_HOME$/Development/api/tests/please/make.py" />
      <jump line="441" column="17" filename="$USER_HOME$/Development/api/tests/please/make.py" />
      <jump line="739" column="8" filename="$USER_HOME$/Development/api/data/models/subscription.py" />
    </jumps>
    <registers>
      <register name="&quot;" type="2">
        <text encoding="base64">ICAgICAgICBwYXltZW50ID0gTW9kZWwuUGF5bWVudC5zYXZlX3dpdGgoCgogICAgICAgICkK</text>
      </register>
      <register name="-" type="4">
        <text>.</text>
      </register>
      <register name="/" type="4">
        <text encoding="base64">XDxwYXJlbnRfcGF5bWVudF90eXBlXD4=</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64">ICAgICAgICBvcmRlcl9pdGVtID0gbWFrZS5hbl9vcmRlcml0ZW0oCiAgICAgICAgICAgIG9yZGVyPW9ybV9vcmRlciwKICAgICAgICAgICAgb3JkZXJpdGVtX19faXNfc3Vic2NyaXB0aW9uPVRydWUsCiAgICAgICAgKQogICAgICAgIHN1YnNjcmlwdGlvbiA9IG1ha2UuYV9zdWJzY3JpcHRpb24oCiAgICAgICAgICAgIHN1YnNjcmlwdGlvbl9fb3JkZXJfaXRlbV9pZD1vcmRlcl9pdGVtLmlkCiAgICAgICAgKQo=</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">ICAgICAgICBwYXltZW50ID0gTW9kZWwuUGF5bWVudC5zYXZlX3dpdGgoCgogICAgICAgICkK</text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">ICAgICAgICAgICAgCiAgICAgICAgICAgIAo=</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">ICAgICAgICAgICAgLndpdGhfcGF5bWVudCgpCg==</text>
      </register>
      <register name="s" type="4">
        <text>(SCHEDULED_DELIVERY_DATE</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">ICAgICAgICBwYXltZW50ID0gZ2V0X2xhdGVzdF9wYXltZW50KHN1YnNjcmlwdGlvbikK</text>
      </register>
      <register name="5" type="4">
        <text encoding="base64"></text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">CiAgICAjIC0tICMK</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">ZnJvbSBlY29tbS5yZXR1cm5zLm9yZGVyX3JldHVybnMuZGF0YS5yZXR1cm5hYmxlX3N1YnNjcmlwdGlvbl9idWlsZGVyIGltcG9ydCBSZXR1cm5hYmxlU3Vic2NyaXB0aW9uQnVpbGRlcgo=</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64">ICAgIGlmIHN1YnNjcmlwdGlvbnM6CiAgICAgICAgc3Vic2NyaXB0aW9uID0gc3Vic2NyaXB0aW9uc1swXQoKICAgIHJldHVybiBzdWJzY3JpcHRpb24K</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">ICAgIHN1YnNjcmlwdGlvbiA9IHN1YnNjcmlwdGlvbnNbMF0K</text>
      </register>
      <register name="y" type="2">
        <text encoding="base64">ICAgICAgICBpZiBub3Qgc2VsZi5oYXNfcmVzcG9uZGVkOgogICAgICAgICAgICByZXR1cm4gIiIKCiAgICAgICAgcmVzcG9uc2VzID0gWwogICAgICAgICAgICBxLnJlc3BvbnNlX2Zvcl9zaGlwcGluZ19wYXJ0bmVyCiAgICAgICAgICAgIGZvciBxIGluIHNlbGYucXVlc3Rpb25zX3dpdGhfcmVzcG9uc2VzCiAgICAgICAgICAgIGlmIHEucmVzcG9uc2VfZm9yX3NoaXBwaW5nX3BhcnRuZXIgaXMgbm90IE5vbmUKICAgICAgICBdCgogICAgICAgIHJldHVybiAiICIuam9pbihyZXNwb25zZXMpCgogICAgZGVmIGdldF9zdXJ2ZXlfbGluayhzZWxmKToK</text>
      </register>
      <register name=":" type="4">
        <text>67</text>
      </register>
    </registers>
    <search>
      <last-search encoding="base64">XDxwYXJlbnRfcGF5bWVudF90eXBlXD4=</last-search>
      <last-offset />
      <last-pattern encoding="base64">XDxwYXJlbnRfcGF5bWVudF90eXBlXD4=</last-pattern>
      <last-replace>fixture_note_response</last-replace>
      <last-substitute>fixture_create_response</last-substitute>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry>403</entry>
        <entry>is_return_supported</entry>
        <entry>existing</entry>
        <entry encoding="base64">XDxSZXNwb25zZVw+</entry>
        <entry>profile</entry>
        <entry>def profile(</entry>
        <entry>transactions</entry>
        <entry>subscription</entry>
        <entry>credit</entry>
        <entry>activation_keyh</entry>
        <entry>activation_key</entry>
        <entry>activation_code</entry>
        <entry>device_subscription</entry>
        <entry>device</entry>
        <entry>subscription_type</entry>
        <entry>DEVICE</entry>
        <entry>access_level</entry>
        <entry>payment_set</entry>
        <entry>payment</entry>
        <entry encoding="base64">XDxwYXJlbnRfcGF5bWVudF90eXBlXD4=</entry>
      </history-search>
      <history-cmd>
        <entry>9291</entry>
        <entry>9330</entry>
        <entry encoding="base64">JzwsJz4zMTU2</entry>
        <entry>3156</entry>
        <entry>3222</entry>
        <entry>357</entry>
        <entry encoding="base64">JzwsJz42NDk=</entry>
        <entry>649</entry>
        <entry>w</entry>
        <entry>208</entry>
        <entry>315</entry>
        <entry>1074</entry>
        <entry>465</entry>
        <entry>50</entry>
        <entry>586</entry>
        <entry>599</entry>
        <entry>source ~/.ideavimrc</entry>
        <entry>37</entry>
        <entry>216</entry>
        <entry>67</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed O</text>
      </shortcut-conflict>
    </shortcut-conflicts>
    <editor>
      <key-repeat enabled="true" />
    </editor>
  </component>
</application>